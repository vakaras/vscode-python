name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'release'
      - 'release/*'
      - 'release-*'

env:
  NODE_VERSION: 14.18.2
  PYTHON_VERSION: '3.10' # YML treats 3.10 the number as 3.1, so quotes around 3.10
  # Force a path with spaces and to test extension works in these scenarios
  # Unicode characters are causing 2.7 failures so skip that for now.
  special-working-directory: './path with spaces'
  special-working-directory-relative: 'path with spaces'
  # Use the mocha-multi-reporters and send output to both console (spec) and JUnit (mocha-junit-reporter).
  # Also enables a reporter which exits the process running the tests if it haven't already.
  MOCHA_REPORTER_JUNIT: true
  DISABLE_TRANSLATIONS: true

jobs:
  setup:
    name: Set up
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: python
    outputs:
      vsix_name: ${{ steps.vsix_names.outputs.vsix_name }}
      vsix_artifact_name: ${{ steps.vsix_names.outputs.vsix_artifact_name }}
    steps:
      - name: VSIX names
        id: vsix_names
        run: |
          import os
          if os.environ["GITHUB_REF"].endswith("/main"):
            vsix_type = "insiders"
          else:
            vsix_type = "release"
          print(f"::set-output name=vsix_name::ms-python-{vsix_type}.vsix")
          print(f"::set-output name=vsix_artifact_name::ms-python-{vsix_type}-vsix")

  build-vsix:
    name: Create VSIX
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build VSIX
        uses: ./.github/actions/build-vsix
        with:
          node_version: ${{ env.NODE_VERSION }}
          vsix_name: ${{ needs.setup.outputs.vsix_name }}
          artifact_name: ${{ needs.setup.outputs.vsix_artifact_name }}

      - name: Create release tag
        shell: bash
        run: echo "TAG_NAME=$(date +v-%Y-%m-%d-%H%M)" >> $GITHUB_ENV

      - name: Create nightly release
        id: create_nightly_release
        uses: actions/create-release@v1
        env:
          # This token is provided by Actions, you do not need to create your own token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Nightly Release ${{ env.TAG_NAME }}
          body: Nigtly build of localized Python plugin.
          draft: false
          prerelease: true

      - name: Store nightly release upload URL
        shell: bash
        run: echo "UPLOAD_URL=${{ steps.create_nightly_release.outputs.upload_url }}" >> $GITHUB_ENV

      - name: Upload VSIX
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ms-python-insiders.vsix
          asset_name: ms-python-${{ env.TAG_NAME }}.vsix
          asset_content_type: application/octet-stream
